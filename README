================================================================================
File OVERVIEW:

einstein.cnf            DIMACS file of the Einstein puzzle generated by generate.py
generate.py             a Python script generating einstein.cnf
main.py                 main file for the DPLL SAT Solver
heuristic.py            heuristics implementation for the solver
settings.py             global counter variables for unit propagations and branching
runbenchmarks.sh        bash script to run 100 UNSAT instances from the SATLIB benchmark
README

================================================================================
EXAMPLES:

**Generating the instance:** python generate.py

**Solving the instance:** python main.py einstein.cnf [r/t/v/p]

**Example:** python main.py einstein.cnf t

Note: if no parameter is given, we will use 2-clause by default

================================================================================
PARAMETERS:
r: randome heuristics
t: two-clause heuristics
v: relative majority voting heuristics based on Jeroslow-Wang, Jeroslow-Wang(2-clause), shortest positive-literal-clause, DLCS, 2-clause
p: probabilistic heuristics based on Jeroslow-Wang, Jeroslow-Wang(2-clause), shortest positive-literal-clause, DLCS, 2-clause

Note: the custom heuristics can still be improved, and such improvements will be reflected in the final report

================================================================================
Disclaimer:
the DIMACS files in benchmarks are for testing only, I did not produce these files, as they are from the SATLIB Benchmark Problems